name: Automatically run cypress tests
on:
  repository_dispatch:
    types: [automation-tests-event]

jobs:

  install-cypress:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      
      - name: Cypress install
        uses: cypress-io/github-action@v4
        with:
          # Disable running of tests within install job
          runTests: false

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-cypress
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cypress-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-${{ env.cache-name }}-
            ${{ runner.os }}-cypress-
            ${{ runner.os }}-


  run-tests-in-parallel:
    needs: install-cypress
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.16.0-chrome89-ff86
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          API_URI: ${{ github.event.client_payload.environment }}graphql/
          APP_MOUNT_URI: ${{ secrets.APP_MOUNT_URI }}
          CYPRESS_baseUrl: ${{ github.event.client_payload.environment }}dashboard/
          CYPRESS_USER_NAME: ${{ secrets.CYPRESS_USER_NAME }}
          CYPRESS_SECOND_USER_NAME: ${{ secrets.CYPRESS_SECOND_USER_NAME }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
          CYPRESS_PERMISSIONS_USERS_PASSWORD: ${{ secrets.CYPRESS_PERMISSIONS_USERS_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_INFO_MESSAGE: Critical triggered via release - ${{github.event.client_payload.project}} ${{github.event.client_payload.version}}, ${{github.event.client_payload.pullRequestUrl}}
        with:
          parallel: true
          group: 'UI - Chrome'
          command: npx cypress run --record --env tags=critical --spec cypress/e2e/navigation.js,cypress/e2e/products/createProduct.js,cypress/e2e/products/productsVariants.js  --parallel --tag ${{github.event.client_payload.environment}}, Critical

